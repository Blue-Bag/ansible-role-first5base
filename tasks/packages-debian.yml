---

# The following two tasks are best put in the pre tasks of your main play
# If you do that then set register: apt_update and apt_upgrade
# see example below - place above your roles/tasks blocks

##################################################################
#
#   pre_tasks:
#
#   - name: Pretask | Update apt cache
#     apt: update_cache=yes cache_valid_time=3600
#     tags: [base,pre]
#     register: apt_update
#
#   - name: Pretask | Run apt-get upgrade
#     apt: upgrade=dist
#     tags: [base,pre]
#     register: apt_upgrade
#
###################################################################


- name: Pretask | Update apt cache | Debian
  apt: update_cache=yes cache_valid_time=3600
  when: apt_update is not defined

- name: Pretask | Run apt-get upgrade
  apt: upgrade=dist
  when: apt_upgrade is not defined

- name: Install packages | Required packages that may not be installed | Debian
  apt:
    name: "{{ f5base_packages_required }}"
    state: present
  become: true


- name: Ensure required packages are running and enabled at system start. | Debian
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  become: true
  with_items: "{{ f5base_packages_started }}"

# Remove landscape as it is not required on ansible controlled server
# and we get a performance improvement
# https://www.byte.nl/blog/ansible-ubuntu-30-percent-speed-increase/
- name: Remove packages | Speed up Ansible by purging landscape-common | Debian
  apt:
    name: "{{ f5base_packages_remove }}"
    state: absent
    purge: true
  become: true
  when: ansible_distribution == 'Ubuntu'

- name: Install unattended-upgrades | Debian
  apt:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ f5base_unattended_up_packages }}"
  become: true

- name: check if tmp is mounted as tmp_is_noexec
  shell: "mount | grep 'on /tmp'"
  register: tmp_mount_options
  changed_when: false
  ignore_errors: true

- name: check is noexec is in stdout
  set_fact:
    tmp_is_noexec: "{{ true if (tmp_mount_options.stdout.find('noexec') != -1) else false }}"

- name: debug
  debug:
    var: tmp_is_noexec
    verbosity: 2

- name: Copy unattended-upgrades configuration files in place. | Debian
  template:
    src: "{{ item.file }}.j2"
    dest: /etc/apt/{{ item.path }}{{ item.file }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - {file: "10periodic", install: true, path: "apt.conf.d/"}
    - {file: "50unattended-upgrades", install: true, path: "apt.conf.d/"}
    - {file: "60remounttmp", install: tmp_is_noexec, path: "apt.conf.d/"}
    - {file: "listchanges.conf", install: true, path: ""}
  when: item.install | bool

# TODO check email address for update notifications
# default seems OK on Debian
# - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
#   action: lineinfile dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent

# - name install apticron to enable notifications
#   apt: name=apticron
#   become: true

# - name: Install python-software-properties so the apt_repository module will work properly
#   apt: name=python-software-properties
