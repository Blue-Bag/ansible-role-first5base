---
# We need sudo for some of the Docker commands.
sudo: required

env:
  # - distro: centos7
  #   init: /usr/lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # - distro: centos6
  #   init: /sbin/init
  #   run_opts: ""
  # - distro: fedora24
  #   init: /usr/lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # - distro: ubuntu1604
  #   init: /lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ""
  # - distro: debian8
  #   init: /lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull container from Docker Hub.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --cap-add SYS_ADMIN --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'


  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test the Ansible role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --diff'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)


notifications:
  slack:
    secure: eB3bo5EPiQuLie3rDO27+Y+F+PToI5KtspeGdFOjjSoT3/pz0ShwMZ89jBMYv+U+WjchWDmuf3MAvpl9nzWiVEC3xaZzbnjbcm7JfMPgwd0iGmT7WowaXaVMHF+N6ejCe9GkomGb49Lq0srlH90VVBbMEUutWcuMhY9bK45WeXvxhx1or8LiWfZZCkCejX5JBfgcSHEUi6hyorzYgI27Q/v83FkTlCDaRPkYMEPQbgZfCEMI03WS90nrIlmfRKL/HVdUc2uk36QR6ZU1t1yJsg+YycRZkymKIoONLbg+U9Q1t4KZ/BT0n3V232NBp1WolHF5btxU/b7i/UyVKvgCGG0xnzU5BfF1Z3EqmAmNSdh9QGywOm3WZfqOcB00P67cJnsDJFqaZLQGbAVbfXPNlvEC0/oSxwP0gGjC9Y01B0sqJXtJmuoip9W0m9CJGPSiIJD+4Hbn4YnKNZ/ERm7+SDWSPSyy3WaYpssoOe659oy3TAloA2HkaZf1vDrBM+8brAxtTLPC9gwYWan6Sg3fC0C2+a14ANBjwoGfURbzH8Z4HY9VJQo9aZ6JVOkh5Ii4ZV0az2ReS7pc6vGcZLWdBlP/ykIiBcBvxRvwWNjzanFhARKSKzIOmxmQvfjtS3xB8UYWW6YeNGvnLXJib4gMmJIQhFe/voC2MWHTYpaSxv0=
